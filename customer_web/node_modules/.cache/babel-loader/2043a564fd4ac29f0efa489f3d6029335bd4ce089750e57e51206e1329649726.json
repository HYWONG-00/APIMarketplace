{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wong Hui Ying\\\\Downloads\\\\cosmos_api\\\\customer_web\\\\src\\\\pages\\\\success.jsx\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Query } from 'appwrite';\nimport api from '../appwrite/api';\nimport { Server } from '../appwrite/config';\nimport PageIllustration from \"../components/page-illustration\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Success = () => {\n  _s();\n  //prevent calling updateDB in useEffect twice\n  const effectRan = useRef(false);\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    if (effectRan.current == false) {\n      const params = new URLSearchParams(window.location.search);\n      const planid = params.get('pid');\n      const totalRequest = params.get('request');\n      const name = params.get('name');\n      const plan = params.get('plan');\n      const amount = params.get('amount');\n      async function updateDB() {\n        const currentDate = new Date();\n        const formattedDate = `${currentDate.getMonth() + 1}/${currentDate.getDate()}/${currentDate.getFullYear()}`;\n        const user = await api.getAccount();\n        const subscriptions = await api.listDocuments(Server.databaseID, Server.subscriptionID, [Query.equal('uid', user['$id'])]);\n        const subscriptionArray = subscriptions['documents'];\n\n        //by HY         \n        console.log(JSON.stringify(subscriptionArray));\n        if (subscriptionArray.length == 0) {\n          await api.createDocument(Server.databaseID, Server.subscriptionID, {\n            name: name,\n            plan: plan,\n            usedReq: 0,\n            totalReq: totalRequest,\n            uid: user['$id'],\n            pid: planid\n          });\n        } else {\n          let foundPlan = false;\n          for (let i = 0; i < subscriptionArray.length; i++) {\n            if (subscriptionArray[i]['pid'] === planid) {\n              let subscriptionDocumentId = subscriptionArray[i]['$id'];\n              await api.updateDocument(Server.databaseID, Server.subscriptionID, subscriptionDocumentId, {\n                name: name,\n                plan: plan,\n                usedReq: 0,\n                totalReq: totalRequest,\n                uid: user['$id'],\n                pid: planid\n              });\n              foundPlan = true;\n              break;\n            }\n          }\n          if (!foundPlan) {\n            await api.createDocument(Server.databaseID, Server.subscriptionID, {\n              name: name,\n              plan: plan,\n              usedReq: 0,\n              totalReq: totalRequest,\n              uid: user['$id'],\n              pid: planid\n            });\n          }\n        }\n        const dashboard = await api.getDocument(Server.databaseID, Server.dashboardDataID, Server.dataID);\n        const count = dashboard['sales'];\n        const new_count = count + parseFloat(amount);\n        await api.updateDocument(Server.databaseID, Server.dashboardDataID, Server.dataID, {\n          sales: new_count\n        });\n        await api.createDocument(Server.databaseID, Server.orderID, {\n          date: formattedDate,\n          customer: user['name'],\n          total: amount,\n          status: 'Paid',\n          api: name,\n          plan: plan\n        });\n        await api.createDocument(Server.databaseID, Server.paymentHistoryID, {\n          name: name,\n          plan: plan,\n          uid: user['$id'],\n          total: amount,\n          status: 'Paid',\n          paiddate: formattedDate\n        });\n      }\n      updateDB();\n      return () => {\n        effectRan.current = true;\n      };\n    }\n    // Output: the value of the session_id parameter\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(PageIllustration, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"relative\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-6xl mx-auto px-4 sm:px-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pt-32 pb-12 md:pt-40 md:pb-20\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-w-3xl mx-auto text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative inline-flex flex-col mb-6\",\n              \"data-aos\": \"fade-up\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: 'https://mardizu.co.id/assets/asset_admin/img/illustration/success.png',\n                width: 300,\n                height: 300\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"h1 mb-4\",\n              \"data-aos\": \"fade-up\",\n              \"data-aos-delay\": \"200\",\n              children: \"Hooray! Your payment is successful.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg text-gray-400\",\n              \"data-aos\": \"fade-up\",\n              \"data-aos-delay\": \"400\",\n              children: [\"Head to your \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/subscriptions\",\n                className: \"text-purple-600 hover:text-gray-200 transition duration-150 ease-in-out\",\n                children: \"subscriptions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 127\n              }, this), \" to check your subscribed API.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n_s(Success, \"RZnSiIvuqYKjis24YbxzjYLX3eE=\");\n_c = Success;\nexport default Success;\nvar _c;\n$RefreshReg$(_c, \"Success\");","map":{"version":3,"names":["Link","React","useEffect","useRef","useState","Query","api","Server","PageIllustration","jsxDEV","_jsxDEV","Success","_s","effectRan","list","setList","current","params","URLSearchParams","window","location","search","planid","get","totalRequest","name","plan","amount","updateDB","currentDate","Date","formattedDate","getMonth","getDate","getFullYear","user","getAccount","subscriptions","listDocuments","databaseID","subscriptionID","equal","subscriptionArray","console","log","JSON","stringify","length","createDocument","usedReq","totalReq","uid","pid","foundPlan","i","subscriptionDocumentId","updateDocument","dashboard","getDocument","dashboardDataID","dataID","count","new_count","parseFloat","sales","orderID","date","customer","total","status","paymentHistoryID","paiddate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","width","height","to","_c","$RefreshReg$"],"sources":["C:/Users/Wong Hui Ying/Downloads/cosmos_api/customer_web/src/pages/success.jsx"],"sourcesContent":["import { Link } from 'react-router-dom'\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Query } from 'appwrite';\nimport api from '../appwrite/api'\nimport { Server } from '../appwrite/config';\n\nimport PageIllustration from \"../components/page-illustration\";\n\nconst Success = () => {\n  //prevent calling updateDB in useEffect twice\n    const effectRan = useRef(false);\n    const [list, setList] = useState([]);\n    useEffect(() => {\n      if(effectRan.current == false){\n          const params = new URLSearchParams(window.location.search);\n          const planid = params.get('pid');\n          const totalRequest = params.get('request');\n          const name = params.get('name');\n          const plan = params.get('plan');\n          const amount = params.get('amount')\n          \n          async function updateDB() {\n              const currentDate = new Date();\n              const formattedDate = `${currentDate.getMonth() + 1}/${currentDate.getDate()}/${currentDate.getFullYear()}`;\n            const user = await api.getAccount()\n            const subscriptions = await api.listDocuments(Server.databaseID, Server.subscriptionID, [\n              Query.equal('uid', user['$id']),\n            ])\n            const subscriptionArray = subscriptions['documents']\n            \n            \n            //by HY         \n            console.log(JSON.stringify(subscriptionArray));\n\n            if(subscriptionArray.length == 0){\n              await api.createDocument(Server.databaseID, Server.subscriptionID, {\n                name: name,\n                plan: plan,\n                usedReq: 0,\n                totalReq: totalRequest,\n                uid: user['$id'],\n                pid: planid\n              })\n            }\n            else{      \n              let foundPlan = false;     \n              for (let i = 0; i < subscriptionArray.length; i++) {\n                if (subscriptionArray[i]['pid'] === planid) {\n                  let subscriptionDocumentId = subscriptionArray[i]['$id']\n                  await api.updateDocument(Server.databaseID, Server.subscriptionID, subscriptionDocumentId, {\n                    name: name,\n                    plan: plan,\n                    usedReq: 0,\n                    totalReq: totalRequest,\n                    uid: user['$id'],\n                    pid: planid\n                  })   \n                  foundPlan = true;\n                  break;                  \n                }                           \n              }\n              \n              if(!foundPlan){\n                await api.createDocument(Server.databaseID, Server.subscriptionID, {\n                  name: name,\n                  plan: plan,\n                  usedReq: 0,\n                  totalReq: totalRequest,\n                  uid: user['$id'],\n                  pid: planid\n                })\n              }\n            }\n\n            const dashboard = await api.getDocument(Server.databaseID, Server.dashboardDataID, Server.dataID)\n            const count = dashboard['sales'];\n            const new_count = count + parseFloat(amount);\n            await api.updateDocument(Server.databaseID, Server.dashboardDataID, Server.dataID, {\n                sales: new_count\n            }) \n\n            await api.createDocument(Server.databaseID, Server.orderID, {\n              date: formattedDate,\n              customer: user['name'],\n              total: amount,\n              status: 'Paid',\n              api: name,\n              plan: plan\n            })\n            \n            await api.createDocument(Server.databaseID, Server.paymentHistoryID, {\n              name: name,\n              plan: plan,\n              uid: user['$id'],\n              total: amount,\n              status: 'Paid',\n              paiddate: formattedDate\n            })\n\n           \n            \n          }\n          \n          updateDB();\n\n        return () => {\n          effectRan.current = true;\n        };\n      }\n       // Output: the value of the session_id parameter\n      }, []);\n\n    return (\n        <section className=\"relative\">\n            <PageIllustration />\n                    <section className=\"relative\">\n                        <div className=\"max-w-6xl mx-auto px-4 sm:px-6\">\n                            <div className=\"pt-32 pb-12 md:pt-40 md:pb-20\">\n                                <div className=\"max-w-3xl mx-auto text-center\">\n                                    {/* Top image */}\n                                    <div className=\"relative inline-flex flex-col mb-6\" data-aos=\"fade-up\">\n                                        <img src={'https://mardizu.co.id/assets/asset_admin/img/illustration/success.png'} width={300} height={300}/>\n                                        \n                                    </div>\n                                    {/* Content */}\n                                    <h1 className=\"h1 mb-4\" data-aos=\"fade-up\" data-aos-delay=\"200\">Hooray! Your payment is successful.</h1>\n                                    <p className=\"text-lg text-gray-400\" data-aos=\"fade-up\" data-aos-delay=\"400\">Head to your <Link to=\"/subscriptions\" className=\"text-purple-600 hover:text-gray-200 transition duration-150 ease-in-out\">subscriptions</Link> to check your subscribed API.</p>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n        </section>\n\n    )\n}\n\nexport default Success;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}